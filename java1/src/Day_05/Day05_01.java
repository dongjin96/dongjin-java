package Day_05;

public class Day05_01 {


	

	public static void main(String[] args) {
		
		// 복습
			// 변수 : 미리정해진 크기상자[자료형] 의 데이터 저장
				// 준비물
				//1. 자료형[상자크기] 2. 변수명[상자이름] 3. 초기값[상자의내용물]
			int 변수 =10;// 4바이트
			    
			 // 많은 변수가 필요할때는 어떻게 할것인지??
				// 선언과 관리 효율이 떨어짐
			// 배열 : 동일한 크기상자의 여러개 번수 선언
				//1. 자료형2.배열형3.배열길이[변수개수]
				//2. 저장하는 순서 : 인덱스 [0~배열길이-1]
				//3. 메모리 효율성 감소<-----> 리스크
			
			// 변수 / 배열 => 메모리
					//1. 메모리는 하나의 자료형의 크기만큼 주소값[16진수:]못외움..)(일바이트당 일주소)  생성
					//2. 컴퓨터는 주소값을 통한 메모리 접근
			
			
			//int[]배열 = new int[10]; // int : 4바이트 * 10 => 배열의 크기는 40 바이트

		
		//1차원 배열 :  배열의 길이
			int[]배열 = new int[3]; // int : 4바이트 * 10 => 배열의 크기는 40 바이트
			 배열[0]=80; 배열[1]=90;배열[2]=100;
			
		//2차원 배열 : 배열의 [가로길이] [세로길이]
			int[][] 배열2 = new int[2][3];
			배열2[0][0]= 80; 배열2[0][1]=90; 배열2[0][2]=100;
			배열2[1][0]= 40; 배열2[1][1]=50; 배열2[1][2]=60;
			
			System.out.println("2차원배열 : "+배열2);
			System.out.println("배열[0][0] : "+배열2[0][0]);
			System.out.println("배열 전체 가로길이 :"+ 배열2.length);
			System.out.println("배열 전체 세로길이 :"+ 배열2[0].length);	
					
					
		//3차원 [다차원] 배열 :배열의[가로길이[세로길이][높이길이]
		 int[][][]배열3 = new int[10][10][10];//4바이트 *10*10*10=> 4000바이트
		 
		 
		 
		 // 문제1 : 반복문을 이용한 0~49 까지 첫번쨰 행에 저장
		 		// 50~99 까지는 두번쨰 행에 저장하는 2차원 배열 선언하고 출력
		 
		int[][] 배열4 = new int[2][50]; //앞이 행이 2 열 50개 총 백칸 =>400바이트//중요**
	     for(int i = 0 ; i<100; i++) {//i 는0부터 100미만까지 1씩 증가하면서 반복
	    	 if(i<50) 배열4[0][i]=i ;// 해당 i 인덱스의 i 값 넣기
	    	 else 배열4[i][i-50]=i;	 
	     }
	     // i 가 0 일떄 배열4 [0][0]=0
	     // i 가 1 일떄 배열4 [0][1]=1 ~~~~~~~~~~~~~~i 가 49일떄 배열[0][49]=49
	     // i 가 50 일떄 배열 4[1][(50-50)0]=50~~~~~~~~~i 가 99일떄 배열4[1][(90-50)49]=99
	     
		 
		for(int i = 0; i< 100; i++) {
		if(i<50)System.out.printf("[%2d]", 배열4[0][i]);
		else System.out.println();
		
		if(i==49) System.out.println();
		}
		
	}

	}

}
